apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o alligator.k8s.yml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: api
      name: api
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 80
      selector:
        io.kompose.service: api
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o alligator.k8s.yml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o alligator.k8s.yml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: api
      name: api
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: api
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o alligator.k8s.yml
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: api
        spec:
          containers:
            - env:
                - name: DB_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: DB_HOST
                      name: api--env
                - name: DB_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: DB_PASSWORD
                      name: api--env
                - name: DB_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: DB_PORT
                      name: api--env
                - name: DB_USERNAME
                  valueFrom:
                    configMapKeyRef:
                      key: DB_USERNAME
                      name: api--env
                - name: MAX_WORKERS
                  valueFrom:
                    configMapKeyRef:
                      key: MAX_WORKERS
                      name: api--env
              image: rjcortese/alligator:latest
              name: api
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: v1
    data:
      DB_HOST: db
      DB_PASSWORD: abc123
      DB_PORT: "27017"
      DB_USERNAME: root
      MAX_WORKERS: "2"
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: api-api--env
      name: api--env
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o alligator.k8s.yml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o alligator.k8s.yml
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: MONGO_INITDB_ROOT_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: MONGO_INITDB_ROOT_PASSWORD
                      name: db--env
                - name: MONGO_INITDB_ROOT_USERNAME
                  valueFrom:
                    configMapKeyRef:
                      key: MONGO_INITDB_ROOT_USERNAME
                      name: db--env
              image: mongo:latest
              name: db
              ports:
                - containerPort: 27017
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: db-data
                - mountPath: /data/configdb
                  name: db-conf
          restartPolicy: Always
          volumes:
            - name: db-data
              persistentVolumeClaim:
                claimName: db-data
            - name: db-conf
              persistentVolumeClaim:
                claimName: db-conf
    status: {}
  - apiVersion: v1
    data:
      MONGO_INITDB_ROOT_PASSWORD: abc123
      MONGO_INITDB_ROOT_USERNAME: root
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-db--env
      name: db--env
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-data
      name: db-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-conf
      name: db-conf
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

